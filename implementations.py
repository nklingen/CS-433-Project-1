# -*- coding: utf-8 -*-
"""implementations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zeq_n5zvYC7VhLcEDZj__An00RNCkhER
"""

import numpy as np

from google.colab import files
uploaded = files.upload()

def least_squares_GD(y, tx, initial_w, max_iters, gamma): # Linear regression using gradient descent

def least_squares_SGD(y, tx, initial_w, max_iters, gamma): # Linear regression using stochastic gradient descent
  return (w, loss) # return last weight vector of the method and the corresponding loss value (cost function)

def least_squares(y, tx):
    w=np.linalg.solve(tx.T @ tx, tx.T @ y)
    loss = ((y - tx @ w).T) @ (y - tx @ w) / (2 * y.size)
    return w, loss

def ridge_regression(y, tx, lambda_):

def logistic_regression(y, tx, initial_w, max_iters, gamma):

def reg_logistic_regression(y, tx, lambda_, initial_w, max_iters, gamma):

# calculate the correlation matrix and eliminate the features that are very correlated with each other or create new features
